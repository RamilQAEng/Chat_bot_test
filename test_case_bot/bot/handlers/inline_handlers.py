from aiogram import types
from aiogram.fsm.context import FSMContext
from utils.logger import logger
from bot.handlers.states import UserStates  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¢–ó"
async def handle_send_tz_callback(callback: types.CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¢–ó".
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –±–æ—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞.
    """
    logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¢–ó'")
    await state.set_state(UserStates.waiting_for_tz)  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –±–æ—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¢–ó
    await callback.message.answer("üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¢–ó —Ç–µ–∫—Å—Ç–æ–º.")
    await callback.answer()  # –ó–∞–≤–µ—Ä—à–∞–µ–º callback

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å"
async def handle_help_callback(callback: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å".
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞.
    """
    logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ü–æ–º–æ—â—å'")
    await callback.message.answer(
        "üìö –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:\n"
        "1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¢–ó'.\n"
        "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¢–ó —Ç–µ–∫—Å—Ç–æ–º.\n"
        "3. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–∏.\n"
        "4. –ü–æ–ª—É—á–∏—Ç–µ Excel-—Ñ–∞–π–ª —Å —Ç–µ—Å—Ç-–∫–µ–π—Å–∞–º–∏.\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å\n"
        "/help - –°–ø—Ä–∞–≤–∫–∞\n"
        "/new - –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è"
    )
    await callback.answer()  # –ó–∞–≤–µ—Ä—à–∞–µ–º callback

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è"
async def handle_new_session_callback(callback: types.CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è".
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é.
    """
    logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è'")
    await state.clear()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await callback.message.answer("üÜï –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –Ω–∞—á–∞—Ç–∞. –ù–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¢–ó', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")
    await callback.answer()

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_handlers(dp):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è inline-–∫–Ω–æ–ø–æ–∫.
    """
    dp.callback_query.register(handle_send_tz_callback, lambda c: c.data == "send_tz")
    dp.callback_query.register(handle_help_callback, lambda c: c.data == "help")
    dp.callback_query.register(handle_new_session_callback, lambda c: c.data == "new_session")